Question: How did viewing a diff between two versions of a file help you see the bug that was introduced?
	Answer: By doing a line to line comparison with the differences highlighted, it was more efficient to find the bug than comparing every line for differences

Question: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	Answer: Easy access to older versions of a file can help efficiency by allowing the programmer the ability to "undo" mistakes, or edit an existing program for a different purpose.

Question: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	Answer: The pros of manually choosing when to create a commit is that you can choose based on logic instead of indescretionary measures such as time or lines of code.

Question: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	Answer: Version control systems like Git, allow saving multiple files in one commit because programming often involves multiple interdependent files. Version control systems like Google Docs, usually involve independent files and therefore treat each file separately.

Question: How can you use the commands git log and git diff to view the history of files?
	Answer: Git log shows the list of commits. Git diff allows the user to compare 2 commits.

Question: How might using version control make you more confident to make changes that could break something?
	Answer: using version control makes it possible to revert back to code before a mistake was entered

Question: Now that you have your workspace set up, what do you want to try using Git for?
Answer: To keep track of projects as I learn to become a fullstack developer
